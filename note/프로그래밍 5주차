1. 객체
        -캡슐화 : 객체를 캡슐로 싸서 내부를 볼 수 없게 하는 것
                  이것이 객체의 본질적인 특징이다.

        -클래스 : 객체 모양을 선언한 틀(캡슐화)

2.클래스
        -메서드 (행동): 멤버함수로 구성된것
        -필드 (속성): 멤버변수를 선언한 것
        -객체 (인스턴스): 클래스의 모양대로 생선된 실체(instance)
                         메모리 공간을 갖는 구체적인 실체

                         #####
                         객체들은 클래스에 선언된 동일한 속성을 가지지만
                         객체마다 서로 다른 고유한 값으로 구분된다.

3.상속
        :상위 개체의 속성이 하위 개체에 물려진다.(extends(확장개념))
           하위 객체가 상위개체의 속성을 모두가지는 관계이다.
        :자식 클래스가 부모클래스의 속성을 물려받고, 기능을 확장한다.

        -부모클래스 :수퍼클래스
        -하위클래스 :서브클래스, 수퍼 클래스를 재사용하고 새로운 특성을 추가적으로 갖는다.

        -자바는 클래스 다중 상속이 없는 대신에, 인터페이스 다중상속을 허용한다.

4.다형성
        :같은 이름의 메소드가 클래스나 객체에 따라 다르게 동작하도록 구현하는것
        -메소드 오버로딩 : 같은 이름이지만 다르게 작동하는 여러 메소드
        -메소드 오버라이딩 : 슈퍼클래스의 메소드를 서브 클래스마다 다르게 구현

5.객체지향언어의 목적
        -소프트웨어의 생산성 향상
        -실세계에 대한 쉬운 모델링


6.절차지향 프로그래밍과 객체지향프로그래밍
        -절차지향 프로그래밍:목적 달성을 위한 일의 흐름에 중점을 둔다.
                            작업을 함수로 작성한, 함수들의 집합
        -객체지향 프로그래밍:객체들간의 상호작용으로 표현
                            클래스 혹은 객체들의 집합으로 프로그램을 작성
